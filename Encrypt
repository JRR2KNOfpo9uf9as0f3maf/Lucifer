for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

initialize = {}
reversed = {}
botTile = {}
initPosition = 5
local customizable = {
    indexTake = 1,
    indexMessage = 1,
    formatTime = os.time()
}
local increment = 1 * 2 * 3
getBot().auto_reconnect = false
getBot().legit_mode = false
getBot().move_range = moveRange
getBot().move_interval = moveInterval

for i =  1,customizable.indexMessage do
    table.insert(reversed,messageidbotinfo[math.floor((pcallBot - 1) * customizable.indexMessage + i)])
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.notifications = function(desc)
    messageBox = MessageBox.new()
    messageBox.title = "Caramoy Syndicate"
    messageBox.description = desc
    messageBox:send()
end

local function readFile(fileName)
    local assign = {}
    local file = io.open(fileName, "r")
    if not file then
        customizable.notifications("Fail to open file.")
        return nil
    else
        for line in file:lines() do
            table.insert(assign, line)
        end
        file:close()
        return assign
    end
end

local assign = readFile(worldFile)
local index = pcallBot - 1
local split = #assign / #getBots()
local start = math.floor(index * split + 1)
local stop = math.floor(index + 1) * split

for x = math.floor(initPosition/2),1,-1 do
    x = x * -1
    table.insert(botTile,x)
end

for x = 0, math.ceil(initPosition/2) - 1 do
    table.insert(botTile,x)
end

customizable.randomLetter = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, 10 do
        letter = letter..stringRandom()
    end
    return letter
end

customizable.initOnFarm = function()
    str = ""
    for i = start, stop do
        local world = customizable.split(assign[i],"[^|]+")[1]
        str = str.."\n||"..string.upper(world).."|| ("..(initialize[world] or "?")..")"
    end
    return str
end

customizable.botStatics = function(text,execution)
    if webhookstatuslink ~= "x"  then
        text = [[
            $webHookUrl = "]]..webhookstatuslink..[["
            $payload = @{
                username = "Caramoy's"
                "content" = "@everyone"
                embeds = @(
                    @{
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]]..text..[["
                                inline = "false"
                            }
                        )
                        footer = @{
                            text = "]]..execution..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
        ]]
        local file = io.popen("powershell -command -", "w")
        file:write(text)
        file:close()
    end
end

customizable.initBot = function()
    if getBot().status == BotStatus.online then
        return "Online"
    elseif getBot().status == BotStatus.account_banned  then
        return "Suspended"
    elseif getBot().status == BotStatus.error_connecting  then
        return "Ercon"
    elseif getBot().status == BotStatus.maintenance then
        return "Maintenance"
    elseif getBot().status == BotStatus.changing_subserver then
        return "Changing Subserver"
    elseif getBot().status == BotStatus.location_banned then
        return "Location Banned"
    else
        return "Disconnect"
    end
end

customizable.initOnStorage = function()
    str = ""
    for i = 1, #storage do
        local world = customizable.split(storage[i],"[^|]+")[1]
        str = str.."\n||"..string.upper(world).."|| : "..(initialize[world] or "?")..""
    end
    return str
end

customizable.initializeBots = function()
	if linkbotinfo ~= "x" then
        realtime = os.time() - customizable.formatTime
        for idx, val in pairs(reversed) do
            local text = [[
                $webHookUrl = "]]..linkbotinfo..[[/messages/]]..val..[["
                $payload = @{
                    username = "Caramoy's"
                    embeds = @(
                        @{
                            title = "Caramoy Syndicate [https://discord.com/invite/fTTKW8vvuq]"
                            color = "]]..math.random(111111,999999)..[["
                            fields = @(
                                @{
                                    name = "Information"
                                    value = "]].."Botname : ["..getBot().level.."]"..string.upper(getBot().name).."\nCurrent : "..string.upper(getBot():getWorld().name).."\nStatus : "..customizable.initBot().."\nRuntime : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                    inline = "true"
                                }
                                @{
                                    name = "Storage Seed"
                                    value = "]]..customizable.initOnStorage()..[["
                                    inline = "true"
                                }
                                @{
                                    name = "Farm Estimates"
                                    value = "]]..customizable.initOnFarm()..[["
                                    inline = "false"
                                }
                            )
                            footer = @{
                                text = "[Lucifer] : Plant Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                            }
                        }
                    )
                }
                
                [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
                Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
            ]]
            local pipe = io.popen("powershell -command -", "w")
            pipe:write(text)
            pipe:close()
        end    
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot().status == BotStatus.online and getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(2000)
    end
    if not getBot():isInWorld(world:upper()) or getBot().status ~= BotStatus.online then
        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot()..", Current : "..getBot():getWorld().name.."","Status Script : Running")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            if getBot().status == BotStatus.account_banned then
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                getBot():stopScript()
            end
            if getBot().status == BotStatus.maintenance then
                sleep(delaymaintenance * 60000)
            else
                sleep(delayreconnect * 1000)
            end
        end
        while not getBot():isInWorld(world:upper()) do
            getBot():warp(world:upper())
            sleep(delaywarp * 1000)
        end
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():warp(world:upper(),id:upper())
                sleep(delaywarp * 1000)
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot()..", Current : "..getBot():getWorld().name.."","Status Script : Running")
    end
end

customizable.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        local count = 0
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") or variant:get(1):getString():lower():find("unknown reason.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked do
            if getBot().status == BotStatus.online and getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    if getBot().status == BotStatus.account_banned then
                        customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                        getBot():stopScript()
                    end
                    if getBot().status == BotStatus.maintenance then
                        sleep(delaymaintenance * 60000)
                    else
                        sleep(delayreconnect * 1000)
                    end
                end
                customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
            end
            getBot():warp(name)
            listenEvents(3)
            count = count + 1
            if count < 5 then
                sleep(delaywarp * 1000)
            else
                sleep(delayidiotserver * 60000)
            end
        end
        removeEvents()
        sleep(1000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot().status == BotStatus.online and getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(2000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        if getBot().status == BotStatus.account_banned then
                            customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Stopped, Reason : Bot status "..customizable.initBot().."")
                            getBot():stopScript()
                        end
                        if getBot().status == BotStatus.maintenance then
                            sleep(delaymaintenance * 60000)
                        else
                            sleep(delayreconnect * 1000)
                        end
                    end
                    customizable.botStatics(""..getBot().name.." status is "..customizable.initBot().."","Status Script : Running")
                end
                getBot():warp(name)
                sleep(delaywarp * 1000)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.placeFarmable = function(x,y,str)
    for _,idx in pairs(botTile) do
        if getTile(x + idx,y + str).fg == 0 then
            return true
        end
    end
    return false
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.onTake = function(threads)
    for i = customizable.indexTake , #storage do
        world = customizable.split(storage[i],"[^|]+")[1]
        door = customizable.split(storage[i],"[^|]+")[2]
        customizable.warp(world,door)
        customizable.initializeBots()
        if not nuked then
            if not wrong then
                if not splice then
                    if customizable.itemFloat(seed) == 0 and not looping then
                        initialize[world] = ""..customizable.itemFloat(seed).."x (EMPTY)"
                        customizable.botStatics("Seeds storage : ||"..world.."|| has empty, skipped world","Status Script : Running")
                        print("["..pcallBot.."]Seeds storage : ("..world..") has empty, skipped world")
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storage then
                            initialize[world] = ""..customizable.itemFloat(seed).."x (EMPTY)"
                            customizable.botStatics("All seeds storage has empty","Status Script : Stopped, Reason : All seed storage is limit")
                            customizable.initializeBots()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            else
                                customizable.warp(customizable.randomLetter(),"")
                            end
                            customizable.notifications("["..pcallBot.."]All seeds storage has empty, terminated script ")
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seed) > 15 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    if customizable.itemFloat(seed) == 0 or customizable.itemFloat(seedsplice) == 0 and not looping then
                        initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x (EMPTY)"
                        customizable.botStatics("Seeds storage : ||"..world.."|| has empty, skipped world","Status Script : Running")
                        print("["..pcallBot.."]Seeds storage : ("..world..") has empty, skipped world")
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storage then
                            initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x (EMPTY)"
                            customizable.botStatics("All seeds storage has empty","Status Script : Stopped, Reason : All seeds storage is empty")
                            customizable.initializeBots()
                            customizable.warp(customizable.randomLetter(),"")
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            else
                                customizable.warp(customizable.randomLetter(),"")
                            end
                            customizable.notifications("["..pcallBot.."]All seeds storage has empty, terminated script ")
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seed) > 15 then
                                break
                            end
                        end
                        sleep(1000)
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seedsplice then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seedsplice) > 15 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                end
            else
                initialize[world] = "WRONG DOOR ID"
                wrong = false
                customizable.botStatics("Seeds storage : ||"..world.."|| is wrong door id, skipped world","Script status : Running")
                print("["..pcallBot.."]Seeds storage : ("..world..") is wrong door id, skipped world")
                customizable.indexTake = customizable.indexTake + 1
                if customizable.indexTake > #storage then
                    customizable.botStatics("All seeds storage has empty","Script status : Stopped, Reason : All seeds storage is empty")
                    customizable.warp(customizable.randomLetter(),"")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    else
                        customizable.warp(customizable.randomLetter(),"")
                    end
                    customizable.notifications("["..pcallBot.."]All seeds storage has empty, terminated script")
                    getBot():stopScript()
                end
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            customizable.botStatics("Seeds storage : ||"..world.."|| is NUKED, skipped world","Script status : Running")
            print("["..pcallBot.."]Seeds storage : ("..world..") is NUKED, skipped world")
            customizable.indexTake = customizable.indexTake + 1
            if customizable.indexTake > #storage then
                customizable.botStatics("All seeds storage has empty, terminated script","Script status : Stopped, Reason : All seed storage is empty")
                customizable.warp(customizable.randomLetter(),"")
                if removingbot then
                    removeBot()
                    sleep(2000)
                else
                    customizable.warp(customizable.randomLetter(),"")
                end
                customizable.notifications("["..pcallBot.."]All seeds storage has empty, terminated script")
                getBot():stopScript()
            end
        end
    end
    if not splice then
        initialize[world] = ""..customizable.itemFloat(seed).."x"
    else
        initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x"
    end
end

customizable.pattern = function(world,id)
    botX = getBot().x
    botY = getBot().y
    if botX == 1 then
        botX = botX + 2
        getBot():findPath(botX,botY)
        sleep(100)
    elseif botX == 2 then
        botX = botX + 1
        getBot():findPath(botX,botY)
        sleep(100)
    elseif botX == 0 then
        botX = botX + 3
        getBot():findPath(botX,botY)
        sleep(100)
    end
    local count = 0
    while customizable.placeFarmable(botX,botY,-2) do
        for _,i in pairs(botTile) do
            if getTile(botX + i,botY - 2).fg == 0 then
                getBot():place(botX + i,botY - 2,seed)
                sleep(delayplant)
                customizable.reconnect(world,id,botX,botY)
            end
        end
        count = count + 1
        if count == 5 then
            count = 0
            break
        end
    end
    sleep(delayplant)
    while customizable.placeFarmable(botX,botY,0) do
        for _,i in pairs(botTile) do
            if getTile(botX+i,botY).fg == 0 then
                getBot():place(botX+i,botY,seed)
                sleep(delayplant)
                customizable.reconnect(world,id,botX,botY)
            end
        end
        sleep(delayplant)
        count = count + 1
        if count == 5 then
            count = 0
            break
        end
    end
    sleep(delayplant)
    while customizable.placeFarmable(botX,botY,2) do
        for _,i in pairs(botTile) do
            if getTile(botX+i,botY + 2).fg == 0 then
                getBot():place(botX+i,botY + 2,seed)
                sleep(delayplant)
                customizable.reconnect(world,id,botX,botY)
            end
        end
        count = count + 1
        if count == 5 then
            count = 0
            break
        end
    end
    sleep(delayplant)
    if splice then
        local count = 0
        while customizable.placeFarmable(botX,botY,-2) do
            for _,i in pairs(botTile) do
                if getTile(botX + i,botY - 2).fg == seed then
                    getBot():place(botX + i,botY - 2,seedsplice)
                    sleep(delayplant)
                    customizable.reconnect(world,id,botX,botY)
                end
            end
            count = count + 1
            if count == 5 then
                count = 0
                break
            end
        end
        sleep(delayplant)
        while customizable.placeFarmable(botX,botY,0) do
            for _,i in pairs(botTile) do
                if getTile(botX+i,botY).fg == seed then
                    getBot():place(botX+i,botY,seedsplice)
                    sleep(delayplant)
                    customizable.reconnect(world,id,botX,botY)
                end
            end
            count = count + 1
            if count == 5 then
                count = 0
                break
            end
        end
        sleep(delayplant)
        while customizable.placeFarmable(botX,botY,2) do
            for _,i in pairs(botTile) do
                if getTile(botX+i,botY + 2).fg == seed then
                    getBot():place(botX+i,botY + 2,seedsplice)
                    sleep(delayplant)
                    customizable.reconnect(world,id,botX,botY)
                end
            end
            count = count + 1
            if count == 5 then
                count = 0
                break
            end
        end
        sleep(delayplant)
    end
end

customizable.detectTile = function()
    for x = 0, 99 do
        if getTile(x,1):canHarvest() or not getTile(x,1):canHarvest() then
            return true
        end
    end
    return false
end 

customizable.recheckWorld = function(threads)
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..pcallBot.."]Rechecking")
    if customizable.detectTile() then
        for y = -1 , 53 do
            for x = tileA, tileB, tileC do
                if getTile(x, y).fg == 0 and getTile(x, y + 1).fg ~= 0 and getTile(x, y + 1).fg ~= seed and y ~= 0 then
                    getBot():findPath(x,y)
                    sleep(30)
                    local count = 0
                    customizable.reconnect(threads,door,x,y)
                    while getTile(x,y).fg ~= seed do
                        getBot():place(x,y,seed)
                        sleep(delayplant)
                        customizable.reconnect(threads,door,x,y)
                        count = count + 1
                        if count == 5 then
                            break
                        end
                    end
                    if splice then
                        while getTile(x,y).fg == seed do
                            getBot():place(x,y,seedsplice)
                            sleep(delayplant)
                            customizable.reconnect(threads,door,x,y)
                            count = count + 1
                            if count == 5 then
                                break
                            end
                        end
                    end
                end
                if splice then
                    if getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                else
                    if getBot():getInventory():getItemCount(seed) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                end
            end
            if tileD == 1 then
                if tileA == 0 then
                    tileA = 99
                    tileB = 0
                    tileC = -1
                    tileD = 0
                elseif tileA == 99 then
                    tileA = 0
                    tileB = 99
                    tileC = 1
                    tileD = 0
                end
            elseif tileD == 0 then
                tileD = tileD + 1
            end
        end
    else
        for y = -1 , 53 do
            for x = tileA, tileB, tileC do
                if getTile(x, y).fg == 0 and getTile(x, y + 1).fg ~= 0 and getTile(x, y + 1).fg ~= seed then
                    getBot():findPath(x,y)
                    sleep(30)
                    local count = 0
                    customizable.reconnect(threads,door,x,y)
                    while getTile(x,y).fg ~= seed do
                        getBot():place(x,y,seed)
                        sleep(delayplant)
                        customizable.reconnect(threads,door,x,y)
                        count = count + 1
                        if count == 5 then
                            break
                        end
                    end
                    if splice then
                        while getTile(x,y).fg == seed do
                            getBot():place(x,y,seedsplice)
                            sleep(delayplant)
                            customizable.reconnect(threads,door,x,y)
                            count = count + 1
                            if count == 5 then
                                break
                            end
                        end
                    end
                end
                if splice then
                    if getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                else
                    if getBot():getInventory():getItemCount(seed) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                end
            end
            if tileD == 1 then
                if tileA == 0 then
                    tileA = 99
                    tileB = 0
                    tileC = -1
                    tileD = 0
                elseif tileA == 99 then
                    tileA = 0
                    tileB = 99
                    tileC = 1
                    tileD = 0
                end
            elseif tileD == 0 then
                tileD = tileD + 1
            end
        end 
    end
end

customizable.plant = function(threads)
    tileA = 99
    tileB = 0
    tileC = -1
    print("["..pcallBot.."]Planting")
    for val = 2,3 do
        for y = val, 53, increment do
            for x = tileA, tileB, tileC do
                if getTile(x, y).fg == 0 and getTile(x, y + 1).fg ~= 0 and getTile(x, y + 1).fg ~= seed and x >= 3 then
                    getBot():findPath(x-2,y)
                    sleep(30)
                    customizable.reconnect(threads,door,x-2,y)
                    customizable.pattern(threads,door)
                end
                if splice then
                    if getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                else
                    if getBot():getInventory():getItemCount(seed) <= 15 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) <= 15 do
                                customizable.onTake(threads)
                                sleep(delaylooping * 1000)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        customizable.warp(threads,door)
                        customizable.initializeBots()
                    end
                end
            end
        end
    end
end

customizable.growScan = function(id)
    count = 0
    for _,tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == id then
            count = count + 1
        end
    end
    return count
end

customizable.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

if Information == "Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.3" then
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect * 1000)
    end
    sleep(pcallBot * delayexecute * 1000)
    if splice then
        if getBot():getInventory():getItemCount(seed) <= 15 or getBot():getInventory():getItemCount(seedsplice) >= 15 then
            customizable.onTake(threads)
        end
    else
        if getBot():getInventory():getItemCount(seed) <= 15 then
            customizable.onTake(threads)
        end
    end
    for idx = start,stop do
        local world = customizable.split(assign[idx],"[^|]+")[1]
        local door = customizable.split(assign[idx],"[^|]+")[2]
        customizable.warp(world,door)
        customizable.initializeBots()
        if not nuked then
            if not wrong then
                local formTime = os.time()
                customizable.plant(assign[idx])
                for i = 1, 2 do
                    customizable.recheckWorld(assign[idx])
                end
                local formattedTime = os.time() - formTime
                if not splice then
                    initialize[world] = customizable.growScan(seed).." | "..math.floor(formattedTime/60).." Minutes"
                else
                    initialize[world] = math.floor(formattedTime/60).." Minutes"
                end
            else
                customizable.writeFile("("..world..") is wrong id")
                wrong = false
                print("["..pcallBot.."]("..world..") is wrong door id, skipped world")
                customizable.botStatics("("..world..") is wrong door id, skipped world","Script status : Running")
            end
        else
            customizable.writeFile("("..world..") is NUKED !!")
            nuked = false
            print("["..pcallBot.."]"..world.." is NUKED!, check ur world !!")
            customizable.botStatics("("..world..") is NUKED!, check ur world","Script status : Running")
        end
    end
    customizable.botStatics(""..getBot().name.." finished all world","Script status : Stoped, Reason : Finished all world")
    customizable.warp(customizable.randomLetter(),"")
    customizable.initializeBots()
    if removingbot then
        removeBot()
        sleep(2000)
    end
    customizable.notifications("["..pcallBot.."]finished all world, terminated script!")
else
    customizable.botStatics("Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq","Script status : Stopped, Reason : Reseller idiot")
    customizable.notifications("["..pcallBot.."]Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
