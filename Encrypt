for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

initialize = {}
worlds = {}
local customizable = {
    indexTake = 1,
    formatTime = os.time()
}

if pcallBot then
    tileY = 1 + ((pcallBot - 1) * 2)
    action = #getBots() * 2
    getBot().auto_reconnect = false
    getBot().legit_mode = false
    getBot().move_range = moveRange
    getBot().move_interval = moveInterval
    for i =  1,worldperbot do
        table.insert(worlds,farmList[math.floor((pcallBot - 1) * worldperbot + i)])
    end
end

customizable.guestId = function()
    local letter = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, lettername do
        letter = letter..stringRandom()
    end
    return letter
end

customizable.botStatics = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}

			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

customizable.initBot = function()
    str = ""
    for i, val in pairs(getBots()) do
        if val.status == BotStatus.online then
            enet = "ONLINE"
        elseif val.status == BotStatus.account_banned  then
            enet = "SUSPENDED"
        elseif val.status == BotStatus.error_connecting  then
            enet = "ERCON"
        else
            enet = "DISCONNECT"
        end
        str = str.."\n"..enet.."" 
    end
    return str
end

customizable.initStatus = function()
    str = ""
    for _, bot in pairs(getBots()) do
        str = str.."\n["..bot.level.."]||"..string.upper(bot.name).."||" 
    end
    return str
end

customizable.initWorld = function()
    str = ""
    for _, bots in pairs(getBots()) do
        str = str.."\n||"..string.upper(bots:getWorld().name).."||" 
    end
    return str
end

customizable.initOnStorage = function()
    str = ""
	for i = 1, #storage do
        str = str.."\n||"..string.upper(storage[i]).."|| : "..(initialize[storage[i]] or "?")..""
    end
    return str
end

customizable.initializeBots = function()
	if botinfo then
        realtime = os.time() - customizable.formatTime
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Caramoy's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTS & STORAGE STATICS :"
                                value = "]]..""..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..customizable.initStatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..customizable.initWorld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..customizable.initBot()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE SEED"
                                value = "]]..customizable.initOnStorage()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : Plant Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if not getBot():isInWorld(world:upper()) or not getBot():isInWorld() then
        if getBot().status == BotStatus.online then 
            customizable.botStatics("("..getBot().name..") at another world, trying to joining world again @everyone")
            while not getBot():isInWorld(world:upper()) do
                getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
            end
            if id ~= "" then
                while getTile(getBot().x,getBot().y).fg == 6 do
                    getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                    sleep(delaywarp)
                end
            end
            if x and y then
                while getBot().x ~= x or getBot().y ~= y do
                    getBot():findPath(x,y)
                    sleep(150)
                end
            end
            customizable.botStatics("("..getBot().name..") success to joining world @everyone")
        end
    end
    if getBot().status ~= BotStatus.online then
        customizable.botStatics("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
        end
        if id ~= "" then
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botStatics("("..getBot().name..") status is online @everyone")
    end
end

customizable.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botStatics("("..getBot().name..") status is offline @everyone")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                customizable.botStatics("("..getBot().name..") status is online @everyone")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botStatics("("..getBot().name..") status is offline @everyone")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        sleep(delayreconnect)
                        if getBot().status == BotStatus.account_banned then
                            customizable.botStatics("("..getBot().name..") status is suspended, removing bot @everyone")
                            getBot():stopScript()
                        end
                    end
                    customizable.botStatics("("..getBot().name..") status is online @everyone")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.onTake = function(threads)
    for i = customizable.indexTake , #storage do
        print("["..pcallBot.."]Take seed")
        world = storage[i]
        customizable.warp(world,doorstorage,delaywarp)
        customizable.initializeBots()
        if not nuked then
            if not wrong then
                if not splice then
                    if customizable.itemFloat(seed) == 0 and not looping then
                        initialize[world] = ""..customizable.itemFloat(seed).."x (EMPTY)"
                        customizable.botStatics("Seeds storage : ("..world..") has empty, skipped world @everyone")
                        print("["..pcallBot.."]Seeds storage : ("..world..") has empty, skipped world")
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storage then
                            initialize[world] = ""..customizable.itemFloat(seed).."x (EMPTY)"
                            customizable.botStatics("All seeds storage has empty, terminated script @everyone")
                            print("["..pcallBot.."]All seeds storage has empty, terminated script ")
                            customizable.initializeBots()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seed) > 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    if customizable.itemFloat(seed) == 0 or customizable.itemFloat(seedsplice) == 0 and not looping then
                        initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x (EMPTY)"
                        customizable.botStatics("Seeds storage : ("..world..") has empty, skipped world @everyone")
                        print("["..pcallBot.."]Seeds storage : ("..world..") has empty, skipped world")
                        customizable.indexTake = customizable.indexTake + 1
                        if customizable.indexTake > #storage then
                            initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x (EMPTY)"
                            customizable.botStatics("All seeds storage has empty, terminated script @everyone")
                            print("["..pcallBot.."]All seeds storage has empty, terminated script ")
                            customizable.initializeBots()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seed then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seed) > 0 then
                                break
                            end
                        end
                        sleep(1000)
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == seedsplice then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,doorstorage,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(seedsplice) > 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                end
            else
                initialize[world] = "WRONG DOOR ID"
                wrong = false
                sleep(5000)
                customizable.botStatics("Seeds storage : ("..world..") is wrong door id, skipped world @everyone")
                print("["..pcallBot.."]Seeds storage : ("..world..") is wrong door id, skipped world")
                customizable.indexTake = customizable.indexTake + 1
                if customizable.indexTake > #storage then
                    customizable.botStatics("All seeds storage has empty, terminated script  @everyone")
                    print("["..pcallBot.."]All seeds storage has empty, terminated script")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
            end
        else
            initialize[world] = "NUKED"
            nuked = false
            sleep(5000)
            customizable.botStatics("Seeds storage : ("..world..") is NUKED, skipped world @everyone")
            print("["..pcallBot.."]Seeds storage : ("..world..") is NUKED, skipped world")
            customizable.indexTake = customizable.indexTake + 1
            if customizable.indexTake > #storage then
                customizable.botStatics("All seeds storage has empty, terminated script @everyone")
                print("["..pcallBot.."]All seeds storage has empty, terminated script")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
        end
    end
    if not splice then
        initialize[world] = ""..customizable.itemFloat(seed).."x"
    else
        initialize[world] = ""..customizable.itemFloat(seed).."x / "..customizable.itemFloat(seedsplice).."x"
    end
end

customizable.recheckingWorld = function(threads)
    ::BACK::
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..pcallBot.."]Rechecking")
    for i = 1, 2 do
        if not multiplebot then
            for y = -1, 53 do
                for x = tileA, tileB, tileC do
                    if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                        getBot():findPath(x,y)
                        sleep(delayplant)
                        customizable.reconnect(threads,doorfarmList,x,y)
                        if splice then
                            while getTile(x,y).fg ~= seed do
                                getBot():place(x,y,seed)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                            while getTile(x,y).fg == seed do
                                getBot():place(x,y,seedsplice)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                        else
                            if getTile(x,y).fg ~= seed then
                                getBot():place(x,y,seed)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                        end
                    end
                    if splice then
                        if getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 then
                            if looping then
                                while getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 do
                                    customizable.onTake(threads)
                                    sleep(delaylooping)
                                end
                            else
                                customizable.onTake(threads)
                            end
                            print("["..pcallBot.."]Recheck")
                            customizable.warp(threads,doorfarmList,delaywarp)
                            customizable.initializeBots()
                            goto BACK
                        end
                    else
                        if getBot():getInventory():getItemCount(seed) == 0 then
                            if looping then
                                while getBot():getInventory():getItemCount(seed) == 0 do
                                    customizable.onTake(threads)
                                    sleep(delaylooping)
                                end
                            else
                                customizable.onTake(threads)
                            end
                            print("["..pcallBot.."]Recheck")
                            customizable.warp(threads,doorfarmList,delaywarp)
                            customizable.initializeBots()
                            goto BACK
                        end
                    end
                end
                if tileD == 1 then
                    if tileA == 0 then
                        tileA = 99
                        tileB = 0
                        tileC = -1
                        tileD = 0
                    elseif tileA == 99 then
                        tileA = 0
                        tileB = 99
                        tileC = 1
                        tileD = 0
                    end
                elseif tileD == 0 then
                    tileD = tileD + 1
                end
            end
        else
            for y = tileY, 53, action do
                for x = 0, 99, 1 do
                    if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                        getBot():findPath(x,y)
                        sleep(delayplant)
                        customizable.reconnect(threads,doorfarmList,x,y)
                        if splice then
                            while getTile(x,y).fg ~= seed do
                                getBot():place(x,y,seed)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                            while getTile(x,y).fg == seed do
                                getBot():place(x,y,seedsplice)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                        else
                            if getTile(x,y).fg ~= seed then
                                getBot():place(x,y,seed)
                                sleep(delayplant)
                                customizable.reconnect(threads,doorfarmList,x,y)
                            end
                        end
                    end
                    if splice then
                        if getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 then
                            if looping then
                                while getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 do
                                    customizable.onTake(threads)
                                    sleep(delaylooping)
                                end
                            else
                                customizable.onTake(threads)
                            end
                            print("["..pcallBot.."]Recheck")
                            customizable.warp(threads,doorfarmList,delaywarp)
                            customizable.initializeBots()
                            goto BACK
                        end
                    else
                        if getBot():getInventory():getItemCount(seed) == 0 then
                            if looping then
                                while getBot():getInventory():getItemCount(seed) == 0 do
                                    customizable.onTake(threads)
                                    sleep(delaylooping)
                                end
                            else
                                customizable.onTake(threads)
                            end
                            print("["..pcallBot.."]Recheck")
                            customizable.warp(threads,doorfarmList,delaywarp)
                            customizable.initializeBots()
                            goto BACK
                        end
                    end
                end
            end
        end
    end
end

customizable.plant = function(threads)
    ::BACK::
    tileA = 99
    tileB = 0
    tileC = -1
    tileD = 0
    print("["..pcallBot.."]Planting")
    if not multiplebot then
        for y = -1,53 do
            for x = tileA, tileB, tileC do
                if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                    getBot():findPath(x,y)
                    sleep(delayplant)
                    customizable.reconnect(threads,doorfarmList,x,y)
                    if splice then
                        while getTile(x,y).fg ~= seed do
                            getBot():place(x,y,seed)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                        while getTile(x,y).fg == seed do
                            getBot():place(x,y,seedsplice)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                    else
                        if getTile(x,y).fg ~= seed then
                            getBot():place(x,y,seed)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                    end
                end
                if splice then
                    if getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 do
                                customizable.onTake(threads)
                                sleep(delaylooping)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        print("["..pcallBot.."]Planting")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                else
                    if getBot():getInventory():getItemCount(seed) == 0 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) == 0 do
                                customizable.onTake(threads)
                                sleep(delaylooping)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        print("["..pcallBot.."]Planting")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                end
            end
            if tileD == 1 then
                if tileA == 0 then
                    tileA = 99
                    tileB = 0
                    tileC = -1
                    tileD = 0
                elseif tileA == 99 then
                    tileA = 0
                    tileB = 99
                    tileC = 1
                    tileD = 0
                end
            elseif tileD == 0 then
                tileD = tileD + 1
            end
        end
    else
        for y = tileY, 53, action do
            for x = 0, 99, 1 do
                if getTile(x, y).fg == 0 and getTile(x, y).flags ~= 0 then
                    getBot():findPath(x,y)
                    sleep(delayplant)
                    customizable.reconnect(threads,doorfarmList,x,y)
                    if splice then
                        while getTile(x,y).fg ~= seed do
                            getBot():place(x,y,seed)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                        while getTile(x,y).fg == seed do
                            getBot():place(x,y,seedsplice)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                    else
                        if getTile(x,y).fg ~= seed then
                            getBot():place(x,y,seed)
                            sleep(delayplant)
                            customizable.reconnect(threads,doorfarmList,x,y)
                        end
                    end
                end
                if splice then
                    if getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) == 0 or getBot():getInventory():getItemCount(seedsplice) == 0 do
                                customizable.onTake(threads)
                                sleep(delaylooping)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        print("["..pcallBot.."]Planting")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                else
                    if getBot():getInventory():getItemCount(seed) == 0 then
                        if looping then
                            while getBot():getInventory():getItemCount(seed) == 0 do
                                customizable.onTake(threads)
                                sleep(delaylooping)
                            end
                        else
                            customizable.onTake(threads)
                        end
                        print("["..pcallBot.."]Planting")
                        customizable.warp(threads,doorfarmList,delaywarp)
                        customizable.initializeBots()
                        goto BACK
                    end
                end
            end
        end
    end
end

customizable.writeFile = function(threads)
    local file = io.open("WorldStatus.txt","a")
    file:write(threads.."\n")
    file:close()
end

customizable.addingBots = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..customizable.guestId().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
end

customizable.setAuth = function()
    if not pcallBot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true -- Use Main IP in Data Proxy Tab.
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not pcallBot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

if Information == "Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.1" then
    if autologin and not pcallBot then
        customizable.setAuth()
        customizable.addingBots()
    end
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(pcallBot * delayexecute)
    if not multiplebot then
        for idx , value in ipairs(worlds) do
            customizable.warp(value,doorfarmList,delaywarp)
            customizable.initializeBots()
            if not nuked then
                if not wrong then
                    customizable.plant(value)
                    customizable.recheckingWorld(value)
                else
                    customizable.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..pcallBot.."]("..value..") is wrong door id, skipped world")
                    customizable.botStatics("("..value..") is wrong door id, skipped world !! @everyone")
                end
            else
                customizable.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..pcallBot.."]"..value.." is NUKED!, check ur world !!")
                customizable.botStatics("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    else
        for idx, value in pairs(farmList) do
            customizable.warp(value,doorfarmList,delaywarp)
            customizable.initializeBots()
            if not nuked then
                if not wrong then
                    customizable.plant(value)
                    customizable.recheckingWorld(value)
                else
                    customizable.writeFile("("..value..") is wrong id")
                    wrong = false
                    print("["..pcallBot.."]("..value..") is wrong door id, skipped world")
                    customizable.botStatics("("..value..") is wrong door id, skipped world !! @everyone")
                end
            else
                customizable.writeFile("("..value..") is NUKED !!")
                nuked = false
                print("["..pcallBot.."]"..value.." is NUKED!, check ur world !!")
                customizable.botStatics("("..value..") is NUKED!, check ur world !! @everyone")
            end
        end
    end
    print("["..pcallBot.."]finished all world, terminated script!")
    customizable.botStatics("finished all world, terminated script! @everyone")
    if removingbot then
        removeBot()
        sleep(2000)
    end
else
    print("["..pcallBot.."]Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    customizable.botStatics("Script Plant made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
