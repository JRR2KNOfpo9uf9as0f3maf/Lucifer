for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end 
end

bot = getBot()
inventory = getBot():getInventory()
printed = getBot():getLog()
bot.auto_reconnect = false
bot.legit_mode = false
bot.move_range = moveRange
bot.move_interval = moveInterval
initialize = {}
reversed = {}
botTile = {}
initPosition = 5
local linePositioning = 1 * 2 * 3
local customLine = #getBots() * 2 * 3
local customizable = {
    indexTake = 1,
    indexMessage = 1,
    formatTime = os.time()
}
strFormatted = 'None'

for i =  1,customizable.indexMessage do
    table.insert(reversed,messageidbotinfo[math.floor((pcallBot - 1) * customizable.indexMessage + i)])
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = '%s'
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.notifications = function(desc)
    messageBox = MessageBox.new()
    messageBox.title = 'Caramoy Syndicate'
    messageBox.description = desc
    messageBox:send()
end

local function readFile(fileName)
    local assign = {}
    local file = io.open(fileName, 'r')
    if not file then
        customizable.notifications('Fail to open file.')
        return nil
    else
        for line in file:lines() do
            table.insert(assign, line)
        end
        file:close()
        return assign
    end
end

local assign = readFile(worldFile)
local index = pcallBot - 1
local split = #assign / #getBots()
local start = math.floor(index * split + 1)
local stop = math.floor(index + 1) * split

for x = math.floor(initPosition/2),1,-1 do
    x = x * -1
    table.insert(botTile,x)
end

for x = 0, math.ceil(initPosition/2) - 1 do
    table.insert(botTile,x)
end

customizable.randomLetter = function()
    local letter = ''
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, 10 do
        letter = letter..stringRandom()
    end
    return letter
end

customizable.isPlanted = function(str,ex,ye)
    includes = getTile(ex, ye+1)
    classType = getInfo(includes.fg).collision_type
    return (str == 'normal' and (getTile(ex,ye).fg == 0 and (classType ~= 0 and classType <= 3) and includes.fg ~= 0 and bot:getWorld():hasAccess(ex,ye) > 0 and getTile(ex,ye).flags < 4096) or str == 'splice' and (getTile(ex,ye).fg == seed and (classType ~= 0 and classType <= 3) and includes.fg ~= 0 and bot:getWorld():hasAccess(ex,ye) > 0 and getTile(ex,ye).flags < 4096))
end

customizable.tableFormatted = function(time)
    if strFormatted == 'None' then
        strFormatted = ''
    end
    strFormatted = strFormatted .. time .. '\n'
end

customizable.textInfo = function(str,alphabet)
    printed:append(alphabet)
    customizable.initializeBots('('..string.upper(bot.name)..') '..alphabet)
    if str == 'stop' then
        customizable.notifications(string.upper(bot.name)..' : '..alphabet)
        error(alphabet)
    end
end

customizable.initializeBots = function(text)
    if webhookstatuslink ~= 'x'  then
        local webhook = Webhook.new(webhookstatuslink)
        webhook.content = '@everyone'
        webhook.embed1.use = true
        webhook.embed1:addField('',text,false)
        webhook.embed1.footer.text = 'Webhook Status, sent at : '..(os.date('!%a %b %d, %Y at %I:%M %p', os.time() + 7 * 60 * 60))..''
        webhook:send()
    end
end

customizable.initBot = function()
    if bot.status == BotStatus.online then
        return 'Online'
    elseif bot.status == BotStatus.account_banned  then
        return 'Suspended'
    elseif bot.status == BotStatus.error_connecting  then
        return 'Ercon'
    elseif bot.status == BotStatus.maintenance then
        return 'Maintenance'
    elseif bot.status == BotStatus.changing_subserver then
        return 'Changing Subserver'
    elseif bot.status == BotStatus.location_banned then
        return 'Location Banned'
    else
        return 'Offline'
    end
end

customizable.initOnStorage = function()
    str = ''
    for i = 1, #storage do
        local world = customizable.split(storage[i],'[^|]+')[1]
        str = str..'\n||'..string.upper(world)..'|| : '..(initialize[world] or '?')..''
    end
    return str
end

customizable.localInfo = function(text)
	if linkbotinfo ~= 'x' then
        realtime = os.time() - customizable.formatTime
        for idx, val in pairs(reversed) do
            local webhook = Webhook.new(linkbotinfo)
            webhook.embed1.use = true
            webhook.embed2.use = true
            webhook.embed1.title = 'Caramoy Syndicate [https://discord.com/invite/fTTKW8vvuq]'
            webhook.embed1.color = math.random(111111,999999)
            webhook.embed1:addField('','```Botname : ['..bot.level..']'..string.upper(bot.name)..'\nTask : '..text..'\nCurrent : '..string.upper(bot:getWorld().name)..'\nStatus : '..customizable.initBot()..'\nRuntime : '..math.floor(realtime/86400)..' Days '..math.floor(realtime%86400/3600)..' Hours '..math.floor(realtime%86400%3600/60)..' Minutes```',true)
            webhook.embed2:addField('Farm Estimates',strFormatted,true)
            webhook.embed2:addField('Storage Seed',customizable.initOnStorage(),true)
            webhook.embed2.footer.text = '[Lucifer] : Plant Script\nLast update : '..(os.date('!%a %b %d, %Y at %I:%M %p', os.time() + 7 * 60 * 60))..''
            webhook:edit(val)
        end    
    end
end

customizable.reconnect = function(world,id,x,y)
    if not bot:isInWorld(world:upper()) or bot.status ~= BotStatus.online then
        customizable.textInfo('','status is '..customizable.initBot()..', Current : '..bot:getWorld().name..'')
        while bot.status ~= BotStatus.online do
            bot:connect()
            if bot.status == BotStatus.account_banned then
                customizable.textInfo('stop','status is '..customizable.initBot()..', Script terminated')
            else
                if bot.status == BotStatus.maintenance then
                    sleep(delaymaintenance * 60000)
                else
                    sleep(delayreconnect * 1000)
                end
            end
        end
        while not bot:isInWorld(world:upper()) do
            bot:warp(world:upper())
            sleep(delaywarp * 1000)
        end
        if id ~= '' then
            while getTile(bot.x,bot.y).fg == 6 do
                bot:warp(world:upper(),id:upper())
                sleep(delaywarp * 1000)
            end
        end
        if x and y then
            while bot.x ~= x or bot.y ~= y do
                bot:findPath(x,y)
                sleep(150)
            end
        end
        customizable.textInfo('','status is '..customizable.initBot()..', Current : '..bot:getWorld().name..'')
    end
end

customizable.warp = function(world,door)
    name = world
    if door ~= '' then
        name = name .. '|' ..door
    end
    if not bot:isInWorld(world:upper()) then
        local count = 0
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == 'OnConsoleMessage' then
                if variant:get(1):getString():lower():find('inaccessible.') or variant:get(1):getString():lower():find('unknown reason.') then
                    nuked = true
                end
            end
        end)
        while not bot:isInWorld(world:upper()) and not nuked do
            if bot.status ~= BotStatus.online then
                customizable.textInfo('','status is '..customizable.initBot()..'')
                while bot.status ~= BotStatus.online do
                    bot:connect()
                    if bot.status == BotStatus.account_banned then
                        customizable.textInfo('stop','status is '..customizable.initBot()..', Script terminated.')
                    else
                        if bot.status == BotStatus.maintenance then
                            sleep(delaymaintenance * 60000)
                        else
                            sleep(delayreconnect * 1000)
                        end
                    end
                end
                customizable.textInfo('','status is '..customizable.initBot()..'')
            end
            bot:warp(name)
            listenEvents(delaywarp)
            count = count + 1
            if count == 5 then
                count = 0
                customizable.textInfo('','Maybe hard warp?, disconnecting bot and sleeping for '..delayidiotserver..' minutes')
                bot:disconnect()
                sleep(delayidiotserver * 60000)
            end
        end
        removeEvents()
        sleep(1000)
    end
    if bot:isInWorld(world:upper()) then
        if door ~= '' then
            local stuck = 0
            while getTile(bot.x,bot.y).fg == 6 and not wrong do
                if bot.status ~= BotStatus.online then
                    customizable.textInfo('','status is '..customizable.initBot()..'')
                    while bot.status ~= BotStatus.online do
                        bot:connect()
                        if bot.status == BotStatus.account_banned then
                            customizable.textInfo('stop','status is '..customizable.initBot()..', Script terminated.')
                        else
                            if bot.status == BotStatus.maintenance then
                                sleep(delaymaintenance * 60000)
                            else
                                sleep(delayreconnect * 1000)
                            end
                        end
                    end
                    customizable.textInfo('','status is '..customizable.initBot()..'')
                end
                bot:warp(name)
                sleep(delaywarp * 1000)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

customizable.placeFarmable = function(x,y,str,init)
    for _,idx in pairs(botTile) do
        if bot:getWorld():hasAccess(x + idx,y + str) ~= 0 and not getTile(x + idx,y + str):hasFlag(4096) then
            if getTile(x + idx,y + str).fg == init then
                return true
            end
        end
    end
    return false
end

customizable.placeSpray = function(x,y,str)
    for _,idx in pairs(botTile) do
        if bot:getWorld():hasAccess(x + idx,y + str) ~= 0 and not getTile(x + idx,y + str):hasFlag(4096) then
            if not getTile(x + idx,y + str):canHarvest() then
                return true
            end
        end
    end
    return false
end

customizable.itemFloat = function(id)
    return bot:getWorld().growscan:getObjects()[id] or 0
end

customizable.onTake = function()
    ::back::
    for i = customizable.indexTake , #storage do
        world = customizable.split(storage[i],'[^|]+')[1]
        door = customizable.split(storage[i],'[^|]+')[2]
        customizable.warp(world,door)
        if not nuked then
            if not wrong then
                if spray then
                    if customizable.itemFloat(idSpray) > 0 then
                        printed:append('Take spray')
                        customizable.localInfo('Take spray')
                        for _, obj in pairs(getBot():getWorld():getObjects()) do
                            if obj.id == idSpray then
                                bot:findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                sleep(100)
                                bot:collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                            end
                            if inventory:getItemCount(idSpray) > 0  then
                                break
                            end
                        end
                    else
                        customizable.textInfo('','No more spray, please drop!, Bot sleeping for 30 seconds')
                        sleep(30000)
                    end
                end
                printed:append('Take seeds')
                customizable.localInfo('Take seeds')
                if not splice then
                    if customizable.itemFloat(seed) == 0 then
                        initialize[world] = ''..customizable.itemFloat(seed)..'x (EMPTY)'
                        if not looping then
                            customizable.textInfo('','Storage Seed : '..world..' has empty, skipped world')
                            customizable.indexTake = customizable.indexTake + 1
                            if customizable.indexTake > #storage then
                                initialize[world] = ''..customizable.itemFloat(seed)..'x (EMPTY)'
                                if removingbot then
                                    removeBot()
                                    sleep(2000)
                                else
                                    customizable.warp(customizable.randomLetter(),'')
                                end
                                customizable.localInfo('All take storage has empty')
                                customizable.textInfo('stop','All take storage has empty')
                            end
                        else
                            if #storage == 1 then
                                sleep(delaylooping * 1000)
                                goto back
                            else
                                sleep(delaylooping * 1000)
                                customizable.indexTake = customizable.indexTake + 1
                                if customizable.indexTake > #storage then
                                    customizable.indexTake = 1
                                    goto back
                                end
                            end
                        end
                    else
                        for _, object in pairs(bot:getWorld():getObjects()) do
                            if object.id == seed then
                                bot:findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                bot:collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if inventory:getItemCount(seed) > 15 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    if customizable.itemFloat(seed) == 0 or customizable.itemFloat(seedsplice) == 0 then
                        initialize[world] = ''..customizable.itemFloat(seed)..'x / '..customizable.itemFloat(seedsplice)..'x (EMPTY)'
                        if not looping then
                            customizable.textInfo('','Storage seed : '..world..' has empty, skipped world')
                            customizable.indexTake = customizable.indexTake + 1
                            if customizable.indexTake > #storage then
                                initialize[world] = ''..customizable.itemFloat(seed)..'x / '..customizable.itemFloat(seedsplice)..'x (EMPTY)'
                                if removingbot then
                                    removeBot()
                                    sleep(2000)
                                else
                                    customizable.warp(customizable.randomLetter(),'')
                                end
                                customizable.localInfo('All take storage has empty')
                                customizable.textInfo('stop','All take storage has empty')
                            end
                        else
                            if #storage == 1 then
                                sleep(delaylooping * 1000)
                                goto back
                            else
                                sleep(delaylooping * 1000)
                                customizable.indexTake = customizable.indexTake + 1
                                if customizable.indexTake > #storage then
                                    customizable.indexTake = 1
                                    goto back
                                end
                            end
                        end
                    else
                        for _, object in pairs(bot:getWorld():getObjects()) do
                            if object.id == seed then
                                bot:findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                bot:collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if inventory:getItemCount(seed) > 15 then
                                break
                            end
                        end
                        sleep(1000)
                        for _, object in pairs(bot:getWorld():getObjects()) do
                            if object.id == seedsplice then
                                bot:findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(100)
                                bot:collect(2)
                                sleep(1000)
                                customizable.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if inventory:getItemCount(seedsplice) > 15 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                end
            else
                initialize[world] = 'Wrong door'
                wrong = false
                customizable.textInfo('','Storage seed : '..world..' is wrong door id, skipped world')
                customizable.indexTake = customizable.indexTake + 1
                if customizable.indexTake > #storage then
                    customizable.warp(customizable.randomLetter(),'')
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    else
                        customizable.warp(customizable.randomLetter(),'')
                    end
                    customizable.localInfo('All take storage has empty')
                    customizable.textInfo('stop','All seeds storage has empty, terminated script')
                end
            end
        else
            initialize[world] = 'Nuked'
            nuked = false
            customizable.textInfo('','Storage seed : '..world..' is Nuked, skipped world')
            customizable.indexTake = customizable.indexTake + 1
            if customizable.indexTake > #storage then
                customizable.warp(customizable.randomLetter(),'')
                if removingbot then
                    removeBot()
                    sleep(2000)
                else
                    customizable.warp(customizable.randomLetter(),'')
                end
                customizable.localInfo('All take storage has empty')
                customizable.textInfo('stop','All seeds storage has empty, terminated script')
            end
        end
    end
    if not splice then
        initialize[world] = ''..customizable.itemFloat(seed)..'x'
    else
        initialize[world] = ''..customizable.itemFloat(seed)..'x / '..customizable.itemFloat(seedsplice)..'x'
    end
end

customizable.pattern = function(world,id)
    botX = bot.x
    botY = bot.y
    local function cekTiles(num,ptr,itm,str)
        local tileY = 0
        if num == 'up' then
            tileY = botY - 2
        elseif num == 'mid' then
            tileY = botY
        elseif num == 'down' then
            tileY = botY + 2
        end
        count = 0
        while customizable.placeFarmable(botX,botY,ptr,itm) do
            for _,i in pairs(botTile) do
                if getTile(botX + i,tileY).fg == itm then
                    bot:place(botX + i,tileY,str)
                    sleep(delayplant)
                    customizable.reconnect(world,id,botX,botY)
                end
            end
            count = count + 1
            if count == 10 then
                break
            end
        end
    end
    local function sprayTree(num,ptr)
        local tileY = 0
        if num == 'up' then
            tileY = botY - 2
        elseif num == 'mid' then
            tileY = botY
        elseif num == 'down' then
            tileY = botY + 2
        end
        while customizable.placeSpray(botX,botY,ptr) do
            for _,i in pairs(botTile) do
                if not getTile(botX + i,tileY):canHarvest() then
                    bot:place(botX + i,tileY,idSpray)
                    sleep(delayplant)
                    customizable.reconnect(world,id,botX,botY)
                end
            end
            if inventory:getItemCount(idSpray) < 15 then
                break
            end
        end
    end
    if botX == 1 then
        botX = botX + 2
        bot:findPath(botX,botY)
        sleep(100)
    elseif botX == 2 then
        botX = botX + 1
        bot:findPath(botX,botY)
        sleep(100)
    elseif botX == 0 then
        botX = botX + 3
        bot:findPath(botX,botY)
        sleep(100)
    end
    cekTiles('up',-2,0,seed)
    cekTiles('mid',0,0,seed)
    cekTiles('down',2,0,seed)
    if splice then
        cekTiles('up',-2,seed,seedsplice)
        cekTiles('mid',0,seed,seedsplice)
        cekTiles('down',2,seed,seedsplice)
    end
    if spray then
        sprayTree('up',-2)
        sprayTree('mid',0)
        sprayTree('down',2)
    end
end

customizable.detectTile = function()
    for x = 1, 99 do
        if getTile(x,1).flags ~= 0 then
            return true
        end
    end
    return false
end

local function onBackpack(amt)
    return (splice and (inventory:getItemCount(seed) > amt and inventory:getItemCount(seedsplice) > amt) or not splice and (inventory:getItemCount(seed) > amt))
end

customizable.detectPlant = function(static,id)
    tileA, tileB, tileC, tileD = 99, 0, -1, 0
    local function isTrue(ex,ye)
        if customizable.detectTile() then
            return customizable.isPlanted('normal',ex,ye) and ye ~= 0
        else
            return customizable.isPlanted('normal',ex,ye)
        end
    end
    if bot:isInWorld() then
        for y = -1 , 53 do
            for x = tileA, tileB, tileC do
                if onBackpack(0) then
                    if isTrue(x,y) then
                        while not bot:isInTile(x,y) do
                            bot:findPath(x,y)
                            customizable.reconnect(static,id,x,y)
                        end
                        for i = 1, 10 do
                            if getTile(x,y).fg == 0 then
                                bot:place(x,y,seed)
                                sleep(delayplant)
                                customizable.reconnect(static,id,x,y)
                            else
                                break
                            end
                        end
                        if splice then
                            while getTile(x,y).fg == seed do
                                bot:place(x,y,seedsplice)
                                sleep(delayplant)
                                customizable.reconnect(static,id,x,y)
                            end
                        end
                        if spray then
                            while not getTile(x,y):canHarvest() do
                                bot:place(x,y,idSpray)
                                sleep(delayplant)
                                customizable.reconnect(static,id,x,y)
                                if inventory:getItemCount(idSpray) == 0 then
                                    break
                                end
                            end
                        end
                    end
                else
                    break
                end
            end
        end
    end
end

customizable.recheckWorld = function(world,id)
    printed:append('Rechecking')
    ::back::
    customizable.detectPlant(world,id)
    if not onBackpack(1) then
        customizable.onTake()
        printed:append('Rechecking')
        customizable.warp(world,id)
        customizable.localInfo('Rechecking')
        goto back
    elseif spray and inventory:getItemCount(idSpray) == 0 then
        printed:append('Take spray')
        customizable.localInfo('Take spray')
        while inventory:getItemCount(idSpray) == 0 do
            customizable.onTake()
        end
        printed:append('Planting')
        customizable.warp(world,id)
        customizable.localInfo('Planting')
        goto back
    end
    if spray then
        for _, tile in pairs(bot:getWorld():getTiles()) do
            if tile.fg % 2 == 1 and not tile:canHarvest() then
                while not bot:isInTile(tile.x,tile.y) do
                    bot:findPath(tile.x,tile.y)
                    customizable.reconnect(world,id,tile.x,tile.y)
                end
                while not getTile(tile.x,tile.y):canHarvest() do
                    bot:place(tile.x,tile.y,idSpray)
                    sleep(delayplant)
                    customizable.reconnect(world,id,tile.x,tile.y)
                end
            end
        end
    end
end

customizable.plant = function(world,id)
    tileA, tileB, tileC = 99, 0, -1
    printed:append('Planting')
    if not multipleBot then
        for val = 2,3 do
            for y = val, 53, linePositioning do
                for x = tileA, tileB, tileC do
                    if customizable.isPlanted('normal',x,y) and x >= 3 then
                        bot:findPath(x-2,y)
                        customizable.reconnect(world,id,x-2,y)
                        if bot:isInTile(x-2,y) then
                            customizable.pattern(world,id)
                        end
                    end
                    if not onBackpack(15) then
                        customizable.onTake()
                        printed:append('Planting')
                        customizable.warp(world,id)
                        customizable.localInfo('Planting')
                    elseif spray and inventory:getItemCount(idSpray) < 15 then
                        printed:append('Take spray')
                        customizable.localInfo('Take spray')
                        while inventory:getItemCount(idSpray) < 15 do
                            customizable.onTake()
                        end
                        printed:append('Planting')
                        customizable.warp(world,id)
                        customizable.localInfo('Planting')
                    end
                end
            end
        end
    else
        for val = 2,3 do
            for y = val +  ((pcallBot - 1) * 6), 53, customLine do
                for x = tileA, tileB, tileC do
                    if customizable.isPlanted('normal',x,y) and x >= 3 then
                        bot:findPath(x-2,y)
                        customizable.reconnect(world,id,x-2,y)
                        if bot:isInTile(x-2,y) then
                            customizable.pattern(world,id)
                        end
                    end
                    if not onBackpack(15) then
                        customizable.onTake()
                        printed:append('Planting')
                        customizable.warp(world,id)
                        customizable.localInfo('Planting')
                    elseif spray and inventory:getItemCount(idSpray) < 15 then
                        printed:append('Take spray')
                        customizable.localInfo('Take spray')
                        while inventory:getItemCount(idSpray) < 15 do
                            customizable.onTake()
                        end
                        printed:append('Planting')
                        customizable.warp(world,id)
                        customizable.localInfo('Planting')
                    end
                end
            end
        end
    end
end

customizable.writeFile = function(threads)
    local file = io.open('WorldStatus.txt','a')
    file:write(threads..'\n')
    file:close()
end

customizable.saveFile = function(init,str)
    customizable.writeFile(init..' : is '..str)
    customizable.tableFormatted(string.sub(init,1,3)..' : '..str)
    customizable.textInfo('',init.. ' : is '..str..', skipped world')
end

customizable.runningScript = function(init,id)
    customizable.localInfo('Planting')
    formattedTime = os.time()
    customizable.plant(init,id)
    for i = 1, recheckCount do
        customizable.recheckWorld(init,id)
        sleep(250)
    end
    formattedTime = os.time() - formattedTime
    customizable.tableFormatted(string.sub(init,1,3)..' : '..math.floor(formattedTime/60)..' Mins')
end

if Information == 'Script Plant made by Caramoy Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq' and scriptVersion == 'final_version[0.1]' then
    while bot.status ~= BotStatus.online do
        bot:connect()
        sleep(delayreconnect * 1000)
    end
    sleep(pcallBot * delayexecute * 1000)
    ::back::
    if onBackpack(15) then
        if multipleBot then
            for _, farm in pairs(assign) do
                local world = customizable.split(farm,'[^|]+')[1]
                local door = customizable.split(farm,'[^|]+')[2]
                customizable.warp(world,door)
                if not nuked then
                    if not wrong then
                        customizable.runningScript(world,door)
                    else
                        wrong = false
                        customizable.saveFile(world,'Wrong door')
                    end
                else
                    nuked = false
                    customizable.saveFile(world,'Nuked')
                end
            end
        else
            for idx = start,stop do
                local world = customizable.split(assign[idx],'[^|]+')[1]
                local door = customizable.split(assign[idx],'[^|]+')[2]
                customizable.warp(world,door)
                if not nuked then
                    if not wrong then
                        customizable.runningScript(world,door)
                    else
                        wrong = false
                        customizable.saveFile(world,'Wrong door')
                    end
                else
                    nuked = false
                    customizable.saveFile(world,'Nuked')
                end
            end
        end
        if removingbot then
            removeBot()
            sleep(2000)
        else
            customizable.warp(customizable.randomLetter(),'')
        end
        customizable.localInfo('finished all world, terminated script!')
        customizable.textInfo('stop','finished all world, terminated script!')
    else
        customizable.onTake()
        goto back
    end
else
    customizable.textInfo('stop','Script Plant made by Caramoy Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq, Reseller IDIOT !!')
end
